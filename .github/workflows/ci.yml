name: SimpleAPI(CI)

on:
  push:
    branches:
    - Hadi

jobs:
  
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v1
    
    - name: Set up Python 3.7
      uses: actions/setup-python@v1
      with:
        python-version: 3.7
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        sudo apt-get install libpq-dev
        pip install -r requirements.txt
        
        sudo docker run --rm -d \
          --name=apidb \
          -p=5432 \
          -h=0.0.0.0 \
          --env-file=./.env \
          postgres:12.0-alpine
        
        dbport=$(docker port apidb)
        dbport=${dbport:20:25}
        
        sudo docker build -t simpleapi .
        
        sudo docker run --rm -d \
          --name=simpleapi \
          --link=apidb \
          -p=5057:5057 \
          -h=0.0.0.0 \
          --env-file=./.env \
          --env=DB_HOST=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' apidb) \
          --env=DB_PORT=$dbport \
          simpleapi:latest
    
    - name: Black code formatter
      uses: lgeiger/black-action@v1.0.1

    - name: Lint with flake8
      run: |
        pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Unit tests with pytest
      run: |
        export $(cat .env)
        export DB_HOST=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' apidb)
        cd unit
        pytest -vv
    
    - name: Integration tests with nose
      run: |
        export APP_PORT=5057
        export APP_HOST=localhost
        cd integration 
        nosetests --verbosity=2 test_integration.py
    